Traceback (most recent call last):
  File "/home/runner/micromamba/envs/weldx/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/runner/micromamba/envs/weldx/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/micromamba/envs/weldx/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/micromamba/envs/weldx/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/micromamba/envs/weldx/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/runner/micromamba/envs/weldx/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/runner/micromamba/envs/weldx/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/micromamba/envs/weldx/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
groove.plot()
fig = plt.gcf()
fig.set_size_inches(7, 7);
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/pint_xarray/conversion.py:323[0m, in [0;36mconvert_units[0;34m(obj, units)[0m
[1;32m    322[0m [38;5;28;01mtry[39;00m:
[0;32m--> 323[0m     new_obj [38;5;241m=[39m [43mcall_on_dataset[49m[43m([49m
[1;32m    324[0m [43m        [49m[43mconvert_units_dataset[49m[43m,[49m[43m [49m[43mobj[49m[43m,[49m[43m [49m[43mname[49m[38;5;241;43m=[39;49m[43mtemporary_name[49m[43m,[49m[43m [49m[43munits[49m[38;5;241;43m=[39;49m[43munits[49m
[1;32m    325[0m [43m    [49m[43m)[49m
[1;32m    326[0m [38;5;28;01mexcept[39;00m [38;5;167;01mValueError[39;00m [38;5;28;01mas[39;00m e:

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/pint_xarray/compat.py:13[0m, in [0;36mcall_on_dataset[0;34m(func, obj, name, *args, **kwargs)[0m
[1;32m     11[0m     ds [38;5;241m=[39m obj
[0;32m---> 13[0m result [38;5;241m=[39m [43mfunc[49m[43m([49m[43mds[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m     15[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(obj, xr[38;5;241m.[39mDataArray) [38;5;129;01mand[39;00m [38;5;28misinstance[39m(result, xr[38;5;241m.[39mDataset):

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/pint_xarray/conversion.py:307[0m, in [0;36mconvert_units_dataset[0;34m(obj, units)[0m
[1;32m    306[0m [38;5;28;01mif[39;00m failed:
[0;32m--> 307[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(failed)
[1;32m    309[0m reordered [38;5;241m=[39m {name: converted[name] [38;5;28;01mfor[39;00m name [38;5;129;01min[39;00m obj[38;5;241m.[39mvariables[38;5;241m.[39mkeys()}

[0;31mValueError[0m: {('s',): ValueError('cannot convert non-quantified index')}

The above exception was the direct cause of the following exception:

[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[16], line 1[0m
[0;32m----> 1[0m [43mgroove[49m[38;5;241;43m.[39;49m[43mplot[49m[43m([49m[43m)[49m
[1;32m      2[0m fig [38;5;241m=[39m plt[38;5;241m.[39mgcf()
[1;32m      3[0m fig[38;5;241m.[39mset_size_inches([38;5;241m7[39m, [38;5;241m7[39m);

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/decorator.py:235[0m, in [0;36mdecorate.<locals>.fun[0;34m(*args, **kw)[0m
[1;32m    233[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m kwsyntax:
[1;32m    234[0m     args, kw [38;5;241m=[39m fix(args, kw, sig)
[0;32m--> 235[0m [38;5;28;01mreturn[39;00m [43mcaller[49m[43m([49m[43mfunc[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43m([49m[43mextras[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[43margs[49m[43m)[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkw[49m[43m)[49m

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/weldx/util/util.py:439[0m, in [0;36mcheck_matplotlib_available[0;34m(func, *args, **kwargs)[0m
[1;32m    436[0m     warnings[38;5;241m.[39mwarn([38;5;124m"[39m[38;5;124mMatplotlib is unavailable (module set to None).[39m[38;5;124m"[39m, stacklevel[38;5;241m=[39m[38;5;241m2[39m)
[1;32m    437[0m     [38;5;28;01mreturn[39;00m
[0;32m--> 439[0m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/weldx/welding/groove/iso_9692_1.py:147[0m, in [0;36mIsoBaseGroove.plot[0;34m(self, title, axis_label, raster_width, show_params, axis, grid, line_style, ax, show_area)[0m
[1;32m    145[0m [38;5;28;01mif[39;00m raster_width [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    146[0m     raster_width [38;5;241m=[39m Q_([38;5;241m0.5[39m, _DEFAULT_LEN_UNIT)
[0;32m--> 147[0m profile [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mto_profile[49m[43m([49m[43m)[49m
[1;32m    148[0m [38;5;28;01mif[39;00m title [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    149[0m     title [38;5;241m=[39m _groove_type_to_name[[38;5;28mself[39m[38;5;241m.[39m[38;5;18m__class__[39m]

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/weldx/welding/groove/iso_9692_1.py:366[0m, in [0;36mVGroove.to_profile[0;34m(self, width_default)[0m
[1;32m    363[0m y_value [38;5;241m=[39m np[38;5;241m.[39mappend(y_value, t)
[1;32m    364[0m segment_list[38;5;241m.[39mappend([38;5;124m"[39m[38;5;124mline[39m[38;5;124m"[39m)
[0;32m--> 366[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_translate_reflect[49m[43m([49m[43mb[49m[43m,[49m[43m [49m[43msegment_list[49m[43m,[49m[43m [49m[43mx_value[49m[43m,[49m[43m [49m[43my_value[49m[43m)[49m

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/weldx/welding/groove/iso_9692_1.py:225[0m, in [0;36mIsoBaseGroove._translate_reflect[0;34m(b, segment_list, x_value, y_value)[0m
[1;32m    223[0m [38;5;129m@staticmethod[39m
[1;32m    224[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21m_translate_reflect[39m(b, segment_list, x_value, y_value):
[0;32m--> 225[0m     shape [38;5;241m=[39m [43m_helperfunction[49m[43m([49m[43msegment_list[49m[43m,[49m[43m [49m[43m([49m[43mx_value[49m[43m,[49m[43m [49m[43my_value[49m[43m)[49m[43m)[49m
[1;32m    226[0m     shape [38;5;241m=[39m shape[38;5;241m.[39mtranslate(Q_(np[38;5;241m.[39mappend([38;5;241m-[39mb [38;5;241m/[39m [38;5;241m2[39m, [38;5;241m0[39m), _DEFAULT_LEN_UNIT))
[1;32m    227[0m     [38;5;66;03m# y-axis as mirror axis[39;00m

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/weldx/welding/groove/iso_9692_1.py:1650[0m, in [0;36m_helperfunction[0;34m(segment, array)[0m
[1;32m   1647[0m         segment_list[38;5;241m.[39mappend(seg)
[1;32m   1648[0m         counter [38;5;241m+[39m[38;5;241m=[39m [38;5;241m2[39m
[0;32m-> 1650[0m [38;5;28;01mreturn[39;00m [43mgeo[49m[38;5;241;43m.[39;49m[43mShape[49m[43m([49m[43msegment_list[49m[43m)[49m

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/weldx/geometry.py:909[0m, in [0;36mShape.__init__[0;34m(self, segments)[0m
[1;32m    896[0m [38;5;250m[39m[38;5;124;03m"""Construct a shape.[39;00m
[1;32m    897[0m 
[1;32m    898[0m [38;5;124;03mParameters[39;00m
[0;32m   (...)[0m
[1;32m    906[0m 
[1;32m    907[0m [38;5;124;03m"""[39;00m
[1;32m    908[0m segments [38;5;241m=[39m _to_list(segments)
[0;32m--> 909[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_check_segments_connected[49m[43m([49m[43msegments[49m[43m)[49m
[1;32m    910[0m [38;5;28mself[39m[38;5;241m.[39m_segments [38;5;241m=[39m segments

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/weldx/geometry.py:935[0m, in [0;36mShape._check_segments_connected[0;34m(segments)[0m
[1;32m    923[0m [38;5;250m[39m[38;5;124;03m"""Check if all segments are connected to each other.[39;00m
[1;32m    924[0m 
[1;32m    925[0m [38;5;124;03mThe start point of a segment must be identical to the end point of[39;00m
[0;32m   (...)[0m
[1;32m    932[0m 
[1;32m    933[0m [38;5;124;03m"""[39;00m
[1;32m    934[0m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m([38;5;28mlen[39m(segments) [38;5;241m-[39m [38;5;241m1[39m):
[0;32m--> 935[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m _vector_is_close([43msegments[49m[43m[[49m[43mi[49m[43m][49m[38;5;241;43m.[39;49m[43mpoint_end[49m, segments[i [38;5;241m+[39m [38;5;241m1[39m][38;5;241m.[39mpoint_start):
[1;32m    936[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mSegments are not connected.[39m[38;5;124m"[39m)

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/pint/registry_helpers.py:293[0m, in [0;36mwraps.<locals>.decorator.<locals>.wrapper[0;34m(*values, **kw)[0m
[1;32m    287[0m [38;5;66;03m# In principle, the values are used as is[39;00m
[1;32m    288[0m [38;5;66;03m# When then extract the magnitudes when needed.[39;00m
[1;32m    289[0m new_values, new_kw, values_by_name [38;5;241m=[39m converter(
[1;32m    290[0m     ureg, sig, values, kw, strict
[1;32m    291[0m )
[0;32m--> 293[0m result [38;5;241m=[39m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43mnew_values[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mnew_kw[49m[43m)[49m
[1;32m    295[0m [38;5;28;01mif[39;00m is_ret_container:
[1;32m    296[0m     out_units [38;5;241m=[39m (
[1;32m    297[0m         _replace_units(r, values_by_name) [38;5;28;01mif[39;00m is_ref [38;5;28;01melse[39;00m r
[1;32m    298[0m         [38;5;28;01mfor[39;00m (r, is_ref) [38;5;129;01min[39;00m ret
[1;32m    299[0m     )

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/weldx/geometry.py:271[0m, in [0;36mDynamicShapeSegment.point_end[0;34m(self)[0m
[1;32m    267[0m [38;5;129m@property[39m
[1;32m    268[0m [38;5;129m@UREG[39m[38;5;241m.[39mwraps(_DEFAULT_LEN_UNIT, ([38;5;28;01mNone[39;00m,), strict[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[1;32m    269[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21mpoint_end[39m([38;5;28mself[39m) [38;5;241m-[39m[38;5;241m>[39m pint[38;5;241m.[39mQuantity:
[1;32m    270[0m [38;5;250m    [39m[38;5;124;03m"""Get the end point of the segment."""[39;00m
[0;32m--> 271[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mget_points[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_max_coord[49m[43m)[49m[[38;5;241m0[39m, :[38;5;241m2[39m]

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/weldx/geometry.py:246[0m, in [0;36mDynamicBaseSegment.get_points[0;34m(self, positions)[0m
[1;32m    232[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21mget_points[39m([38;5;28mself[39m, positions: [38;5;28mfloat[39m) [38;5;241m-[39m[38;5;241m>[39m pint[38;5;241m.[39mQuantity:
[1;32m    233[0m [38;5;250m    [39m[38;5;124;03m"""Get an array of the points at the specified relative positions.[39;00m
[1;32m    234[0m 
[1;32m    235[0m [38;5;124;03m    Parameters[39;00m
[0;32m   (...)[0m
[1;32m    244[0m 
[1;32m    245[0m [38;5;124;03m    """[39;00m
[0;32m--> 246[0m     p [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_series[49m[38;5;241;43m.[39;49m[43mevaluate[49m[43m([49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43m{[49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_series[49m[38;5;241;43m.[39;49m[43mposition_dim_name[49m[43m:[49m[43m [49m[43mpositions[49m[43m}[49m[43m)[49m
[1;32m    247[0m     [38;5;28;01mreturn[39;00m p[38;5;241m.[39mdata_array[38;5;241m.[39mtranspose([38;5;241m.[39m[38;5;241m.[39m[38;5;241m.[39m, [38;5;124m"[39m[38;5;124mc[39m[38;5;124m"[39m)[38;5;241m.[39mdata

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/weldx/core/generic_series.py:497[0m, in [0;36mGenericSeries.evaluate[0;34m(self, **kwargs)[0m
[1;32m    495[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mis_expression:
[1;32m    496[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_evaluate_expr(coords)
[0;32m--> 497[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_evaluate_array[49m[43m([49m[43mcoords[49m[43m)[49m

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/weldx/core/generic_series.py:542[0m, in [0;36mGenericSeries._evaluate_array[0;34m(self, coords)[0m
[1;32m    539[0m     [38;5;28;01mif[39;00m k [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mdata_array[38;5;241m.[39mdims:
[1;32m    540[0m         [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124m'[39m[38;5;132;01m{[39;00mk[38;5;132;01m}[39;00m[38;5;124m'[39m[38;5;124m is not a valid dimension.[39m[38;5;124m"[39m)
[1;32m    541[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m[38;5;18m__class__[39m(
[0;32m--> 542[0m     [43mut[49m[38;5;241;43m.[39;49m[43mxr_interp_like[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_obj[49m[43m,[49m[43m [49m[43mda2[49m[38;5;241;43m=[39;49m[43meval_args[49m[43m,[49m[43m [49m[43mmethod[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_interpolation[49m[43m)[49m
[1;32m    543[0m )

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/weldx/util/xarray.py:356[0m, in [0;36mxr_interp_like[0;34m(da1, da2, interp_coords, broadcast_missing, fillna, method, assume_sorted)[0m
[1;32m    349[0m [38;5;66;03m# convert base array units to indexer units[39;00m
[1;32m    350[0m [38;5;66;03m# (needed for the indexing later and it will happen during interpolation anyway)[39;00m
[1;32m    351[0m base_units [38;5;241m=[39m {
[1;32m    352[0m     c: da_temp[c][38;5;241m.[39mattrs[38;5;241m.[39mget(UNITS_KEY)
[1;32m    353[0m     [38;5;28;01mfor[39;00m c [38;5;129;01min[39;00m da1[38;5;241m.[39mcoords[38;5;241m.[39mkeys() [38;5;241m&[39m da_temp[38;5;241m.[39mcoords[38;5;241m.[39mkeys()
[1;32m    354[0m     [38;5;28;01mif[39;00m UNITS_KEY [38;5;129;01min[39;00m da1[c][38;5;241m.[39mattrs
[1;32m    355[0m }
[0;32m--> 356[0m da1 [38;5;241m=[39m [43mda1[49m[38;5;241;43m.[39;49m[43mpint[49m[38;5;241;43m.[39;49m[43mto[49m[43m([49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mbase_units[49m[43m)[49m
[1;32m    358[0m [38;5;66;03m# make sure edge coordinate values of da1 are in new coordinate axis of da_temp[39;00m
[1;32m    359[0m da_temp [38;5;241m=[39m _add_coord_edges(da1[38;5;241m=[39mda1, da2[38;5;241m=[39mda_temp, assume_sorted[38;5;241m=[39massume_sorted)

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/pint_xarray/accessors.py:592[0m, in [0;36mPintDataArrayAccessor.to[0;34m(self, units, **unit_kwargs)[0m
[1;32m    585[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    586[0m         [38;5;124m"[39m[38;5;124munits must be either a string, a pint.Unit object or a dict-like,[39m[38;5;124m"[39m
[1;32m    587[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124m but got [39m[38;5;132;01m{[39;00munits[38;5;132;01m!r}[39;00m[38;5;124m"[39m
[1;32m    588[0m     )
[1;32m    590[0m units [38;5;241m=[39m either_dict_or_kwargs(units, unit_kwargs, [38;5;124m"[39m[38;5;124mto[39m[38;5;124m"[39m)
[0;32m--> 592[0m [38;5;28;01mreturn[39;00m [43mconversion[49m[38;5;241;43m.[39;49m[43mconvert_units[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mda[49m[43m,[49m[43m [49m[43munits[49m[43m)[49m

File [0;32m~/micromamba/envs/weldx/lib/python3.11/site-packages/pint_xarray/conversion.py:331[0m, in [0;36mconvert_units[0;34m(obj, units)[0m
[1;32m    328[0m     [38;5;28;01mif[39;00m temporary_name [38;5;129;01min[39;00m failed:
[1;32m    329[0m         failed[obj[38;5;241m.[39mname] [38;5;241m=[39m failed[38;5;241m.[39mpop(temporary_name)
[0;32m--> 331[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(format_error_message(failed, [38;5;124m"[39m[38;5;124mconvert[39m[38;5;124m"[39m)) [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01me[39;00m
[1;32m    333[0m [38;5;28;01mreturn[39;00m new_obj

[0;31mValueError[0m: Cannot convert variables:
    incompatible units for variable ('s',): cannot convert non-quantified index

